{"version":3,"sources":["services/consts.js","components/LanguagePicker.js","components/Header.js","components/TravelItem.js","components/Settings.js","components/TravelCard.js","components/Main.js","components/Footer.js","App.js","i18n.js","serviceWorker.js","index.js"],"names":["LIST_CATEGORIES","LANGUAGES","LANGUAGES_DATA","value","flagCode","title","LanguagePicker","useState","window","localStorage","getItem","selectedLanguage","setSelectedLanguage","isPopoverOpen","setIsPopoverOpen","useEffect","setItem","i18n","useTranslation","opened","onOpen","onClose","content","direction","spacing","tablet","Object","keys","map","lang","key","iconLeft","code","name","onClick","changeLanguage","size","type","width","iconRight","widthBreakpointDesktop","defaultTokens","spaceMedium","spaceXLarge","HeaderWrapper","styled","div","FlagWrapper","Header","t","align","dataTest","as","heightCheckbox","widthCheckbox","StyledButtonLink","TravelItem","item","shouldResetAll","handleUnreset","handleDeleteItem","showDelete","JSON","parse","checked","setChecked","justify","label","onChange","disabled","color","transparent","Settings","translatedCategory","togglePopover","handleShowDelete","handleReset","showInput","showSettingsPopover","fullWidth","category","renderCardIcon","TravelCard","heading","cardData","data","setData","resetAll","setResetAll","setShowSettingsPopover","setShowInput","setShowDelete","newItem","setNewItem","error","setError","stringify","icon","actions","Card","filter","i","removeItem","placeholder","e","text","newValue","target","charAt","toUpperCase","slice","toLowerCase","find","ref","input","focus","preventDefault","prevData","borderColorCard","widthBreakpointLargeDesktop","spaceLarge","MainWrapper","Main","columnGap","rowGap","largeMobile","columns","desktop","largeDesktop","list","items","widthBreakpointLargeMobile","spaceSmall","spaceXXLarge","FooterWrapper","Footer","Trans","i18nKey","href","external","App","resources","translations","enTranslations","esTranslations","siTranslations","use","initReactI18next","init","lng","fallbackLng","ns","defaultNS","keySeparator","interpolation","escapeValue","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bbf2dcba.chunk.js","sourcesContent":["// @flow\nexport const LIST_CATEGORIES = {\n  ESSENTIALS: \"essentials\",\n  CLOTHES: \"clothes\",\n  TOILETRIES: \"toiletries\",\n  OTHER: \"other\",\n}\n\nexport const LANGUAGES = {\n  ENGLISH: \"en\",\n  SLOVENIAN: \"si\",\n  SPANISH: \"es\",\n}\n\nexport const LANGUAGES_DATA = {\n  [LANGUAGES.ENGLISH]: {\n    value: LANGUAGES.ENGLISH,\n    flagCode: \"gb\",\n    title: \"English\",\n  },\n  [LANGUAGES.SPANISH]: {\n    value: LANGUAGES.SPANISH,\n    flagCode: \"es\",\n    title: \"Español\",\n  },\n  [LANGUAGES.SLOVENIAN]: {\n    value: LANGUAGES.SLOVENIAN,\n    flagCode: \"si\",\n    title: \"Slovenščina\",\n  },\n}\n","// @flow\nimport React, { useState, useEffect } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\"\nimport CountryFlag from \"@kiwicom/orbit-components/lib/CountryFlag\"\nimport ButtonLink from \"@kiwicom/orbit-components/lib/ButtonLink\"\nimport Button from \"@kiwicom/orbit-components/lib/Button\"\nimport Popover from \"@kiwicom/orbit-components/lib/Popover\"\nimport { ChevronDown, ChevronUp } from \"@kiwicom/orbit-components/lib/icons\"\n\nimport { LANGUAGES, LANGUAGES_DATA } from \"../services/consts\"\n\nfunction LanguagePicker() {\n  const initialLanguage = () => window.localStorage.getItem(\"language\") || LANGUAGES.ENGLISH\n  const [selectedLanguage, setSelectedLanguage] = useState(initialLanguage)\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false)\n\n  useEffect(() => {\n    window.localStorage.setItem(\"language\", selectedLanguage)\n  }, [selectedLanguage])\n\n  const { i18n } = useTranslation()\n\n  const changeLanguage = lang => {\n    setSelectedLanguage(lang)\n    i18n.changeLanguage(lang)\n    setIsPopoverOpen(false)\n  }\n\n  const togglePopover = () => {\n    setIsPopoverOpen(!isPopoverOpen)\n  }\n\n  return (\n    <Popover\n      opened={isPopoverOpen}\n      onOpen={() => setIsPopoverOpen(true)}\n      onClose={() => setIsPopoverOpen(false)}\n      content={\n        <Stack direction=\"column\" spacing=\"condensed\" tablet={{ spacing: \"tight\" }}>\n          {Object.keys(LANGUAGES_DATA).map(lang => (\n            <ButtonLink\n              key={lang}\n              iconLeft={\n                <CountryFlag\n                  code={LANGUAGES_DATA[lang].flagCode}\n                  name={LANGUAGES_DATA[lang].title}\n                />\n              }\n              onClick={() => changeLanguage(lang)}\n              size=\"small\"\n              type=\"secondary\"\n              width=\"100%\"\n            >\n              {LANGUAGES_DATA[lang].title}\n            </ButtonLink>\n          ))}\n        </Stack>\n      }\n    >\n      <Button\n        onClick={togglePopover}\n        iconRight={isPopoverOpen ? <ChevronUp /> : <ChevronDown />}\n        type=\"secondary\"\n        size=\"small\"\n        title={LANGUAGES_DATA[selectedLanguage].title}\n      >\n        <CountryFlag\n          code={LANGUAGES_DATA[selectedLanguage].flagCode}\n          name={LANGUAGES_DATA[selectedLanguage].title}\n        />\n      </Button>\n    </Popover>\n  )\n}\n\nexport default LanguagePicker\n","// @flow\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { useTranslation } from \"react-i18next\"\nimport { defaultTokens } from \"@kiwicom/orbit-design-tokens\"\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\"\nimport Heading from \"@kiwicom/orbit-components/lib/Heading\"\nimport Illustration from \"@kiwicom/orbit-components/lib/Illustration\"\n\nimport LanguagePicker from \"./LanguagePicker\"\n\nconst { widthBreakpointDesktop, spaceMedium, spaceXLarge } = defaultTokens\n\nconst HeaderWrapper = styled.div`\n  padding: ${spaceMedium};\n\n  h1 {\n    text-align: center;\n  }\n\n  @media screen and (min-width: ${widthBreakpointDesktop}px) {\n    padding: ${spaceXLarge};\n  }\n`\n\nconst FlagWrapper = styled.div`\n  position: absolute;\n  top: 4px;\n  right: 4px;\n\n  @media screen and (min-width: ${widthBreakpointDesktop}px) {\n    top: 12px;\n    right: 12px;\n  }\n`\n\nfunction Header() {\n  const { t } = useTranslation()\n\n  return (\n    <HeaderWrapper>\n      <FlagWrapper>\n        <LanguagePicker />\n      </FlagWrapper>\n      <Stack direction=\"column\" align=\"center\" dataTest=\"Header\">\n        <Illustration name=\"TimelinePick\" size=\"extraSmall\" />\n        <Heading type=\"title2\" as=\"h1\">\n          {t(\"title\")}\n        </Heading>\n      </Stack>\n    </HeaderWrapper>\n  )\n}\n\nexport default Header\n","// @flow\nimport React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { useTranslation } from \"react-i18next\"\nimport { defaultTokens } from \"@kiwicom/orbit-design-tokens\"\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\"\nimport Checkbox from \"@kiwicom/orbit-components/lib/Checkbox\"\nimport ButtonLink from \"@kiwicom/orbit-components/lib/ButtonLink\"\nimport Close from \"@kiwicom/orbit-components/lib/icons/Close\"\n\nconst { heightCheckbox, widthCheckbox } = defaultTokens\n\nconst StyledButtonLink = styled.div`\n  button {\n    height: ${heightCheckbox};\n    width: ${widthCheckbox};\n  }\n`\n\ntype Props = {\n  item: string,\n  shouldResetAll: boolean,\n  showDelete: boolean,\n  handleUnreset: () => void,\n  handleDeleteItem: () => void,\n}\n\nfunction TravelItem({ item, shouldResetAll, handleUnreset, handleDeleteItem, showDelete }: Props) {\n  const initialChecked = () => JSON.parse(window.localStorage.getItem(`${item}-checked`)) || false\n  const [checked, setChecked] = useState(initialChecked)\n\n  useEffect(() => {\n    // store in local storage\n    window.localStorage.setItem(`${item}-checked`, checked)\n\n    // reset whole card after pressing button reset\n    if (shouldResetAll) {\n      setChecked(false)\n      handleUnreset()\n    }\n  }, [shouldResetAll, handleUnreset, checked, item])\n\n  const { t } = useTranslation()\n\n  return (\n    <Stack direction=\"row\" align=\"start\" justify=\"between\" spacing=\"natural\">\n      <Checkbox\n        label={t(item)}\n        name={item}\n        value={item}\n        checked={checked}\n        onChange={() => setChecked(!checked)}\n        disabled={showDelete}\n      />\n      {showDelete && (\n        <StyledButtonLink>\n          <ButtonLink\n            type=\"secondary\"\n            size=\"small\"\n            iconLeft={<Close color=\"critical\" />}\n            title={`Delete item ${item}`}\n            transparent\n            onClick={handleDeleteItem}\n          />\n        </StyledButtonLink>\n      )}\n    </Stack>\n  )\n}\n\nexport default TravelItem\n","// @flow\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Button from \"@kiwicom/orbit-components/lib/Button\"\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\"\nimport Remove from \"@kiwicom/orbit-components/lib/icons/Remove\"\nimport Popover from \"@kiwicom/orbit-components/lib/Popover\"\nimport Replace from \"@kiwicom/orbit-components/lib/icons/Replace\"\nimport SettingsIcon from \"@kiwicom/orbit-components/lib/icons/Settings\"\n\ntype Props = {\n  translatedCategory: string,\n  togglePopover: () => void,\n  handleShowDelete: () => void,\n  handleReset: () => void,\n  showDelete: boolean,\n  showInput: boolean,\n  showSettingsPopover: boolean,\n}\n\nfunction Settings({\n  translatedCategory,\n  togglePopover,\n  handleShowDelete,\n  handleReset,\n  showDelete,\n  showInput,\n  showSettingsPopover,\n}: Props) {\n  const { t } = useTranslation()\n\n  return (\n    <Popover\n      content={\n        <Stack direction=\"column\" spacing=\"natural\" dataTest=\"Settings-popover\">\n          <Button\n            type=\"secondary\"\n            iconLeft={<Remove />}\n            size=\"small\"\n            onClick={handleShowDelete}\n            fullWidth\n          >\n            {t(\"button.remove_items\")}\n          </Button>\n          <Button\n            type=\"critical\"\n            iconLeft={<Replace />}\n            size=\"small\"\n            onClick={handleReset}\n            fullWidth\n          >\n            {t(\"button.reset_list\", { category: translatedCategory })}\n          </Button>\n        </Stack>\n      }\n      opened={showSettingsPopover}\n      onClose={togglePopover}\n    >\n      <Button\n        size=\"small\"\n        type=\"secondary\"\n        iconLeft={<SettingsIcon />}\n        title={t(\"button.settings\")}\n        onClick={togglePopover}\n        disabled={showDelete || showInput}\n      />\n    </Popover>\n  )\n}\n\nexport default Settings\n","// @flow\nimport React, { useState, useEffect } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Card, { CardSection } from \"@kiwicom/orbit-components/lib/Card\"\nimport Button from \"@kiwicom/orbit-components/lib/Button\"\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\"\nimport InputField from \"@kiwicom/orbit-components/lib/InputField\"\nimport Wallet from \"@kiwicom/orbit-components/lib/icons/Wallet\"\nimport Suitcase from \"@kiwicom/orbit-components/lib/icons/Suitcase\"\nimport Spa from \"@kiwicom/orbit-components/lib/icons/Spa\"\nimport Camera from \"@kiwicom/orbit-components/lib/icons/Camera\"\nimport Plus from \"@kiwicom/orbit-components/lib/icons/Plus\"\n\nimport { LIST_CATEGORIES } from \"../services/consts\"\nimport TravelItem from \"./TravelItem\"\nimport Settings from \"./Settings\"\nimport type { ListCategory } from \"../services/types\"\n\nfunction renderCardIcon(title: ListCategory) {\n  switch (title) {\n    case LIST_CATEGORIES.ESSENTIALS:\n      return <Wallet />\n    case LIST_CATEGORIES.CLOTHES:\n      return <Suitcase />\n    case LIST_CATEGORIES.TOILETRIES:\n      return <Spa />\n    case LIST_CATEGORIES.OTHER:\n      return <Camera />\n    default:\n      return null\n  }\n}\n\nfunction capitalize(text: string) {\n  return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase()\n}\n\ntype Props = {\n  heading: string,\n  category: ListCategory,\n  cardData: Array<string>,\n}\n\nfunction TravelCard({ heading, category, cardData }: Props) {\n  const { t } = useTranslation()\n  const initialData = () => JSON.parse(window.localStorage.getItem(`data-${category}`)) || cardData\n\n  const [data, setData] = useState(initialData)\n  const [resetAll, setResetAll] = useState(false)\n  const [showSettingsPopover, setShowSettingsPopover] = useState(false)\n  const [showInput, setShowInput] = useState(false)\n  const [showDelete, setShowDelete] = useState(false)\n  const [newItem, setNewItem] = useState(\"\")\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    // store data in local storage\n    window.localStorage.setItem(`data-${category}`, JSON.stringify(data))\n  }, [data, category])\n\n  const togglePopover = () => {\n    setShowSettingsPopover(!showSettingsPopover)\n  }\n\n  const handleDeleteItem = item => {\n    // update data\n    setData(data.filter(i => i !== item))\n    // remove item from local storage\n    window.localStorage.removeItem(`${item}-checked`)\n  }\n\n  const handleReset = () => {\n    setResetAll(true)\n    // set data to default\n    setData(cardData)\n    setShowSettingsPopover(false)\n  }\n\n  const handleSubmitNewItem = e => {\n    if (newItem !== \"\") {\n      e.preventDefault()\n      // update data\n      setData(prevData => [...prevData, newItem])\n\n      // clear states\n      setShowInput(false)\n      setNewItem(\"\")\n    }\n  }\n\n  const handleInputChange = e => {\n    const newValue = e.target.value\n    setError(false)\n    setNewItem(capitalize(newValue))\n\n    // show error if the new value already exists on the list\n    if (data.find(item => t(item) === newValue)) {\n      setError(true)\n    }\n  }\n\n  const handleShowDelete = () => {\n    setShowDelete(true)\n    setShowSettingsPopover(false)\n  }\n\n  return (\n    <Card\n      dataTest={`TravelCard-${category}`}\n      title={heading}\n      icon={renderCardIcon(category)}\n      actions={\n        <Settings\n          translatedCategory={heading}\n          togglePopover={togglePopover}\n          handleShowDelete={handleShowDelete}\n          handleReset={handleReset}\n          showDelete={showDelete}\n          showInput={showInput}\n          showSettingsPopover={showSettingsPopover}\n        />\n      }\n    >\n      <CardSection>\n        <Stack direction=\"column\" spacing=\"natural\" tablet={{ spacing: \"condensed\" }}>\n          {data.map(item => (\n            <TravelItem\n              key={item}\n              item={item}\n              shouldResetAll={resetAll}\n              handleUnreset={() => setResetAll(false)}\n              handleDeleteItem={() => handleDeleteItem(item)}\n              showDelete={showDelete}\n            />\n          ))}\n          {showInput ? (\n            <Stack direction=\"row\" spacing=\"condensed\">\n              <InputField\n                name=\"New item\"\n                size=\"small\"\n                placeholder={t(\"placeholder.type_item\")}\n                value={newItem}\n                onChange={handleInputChange}\n                error={error && t(\"input.error\")}\n                ref={input => input && input.focus()}\n              />\n              <Button size=\"small\" onClick={handleSubmitNewItem} disabled={newItem === \"\" || error}>\n                {t(\"button.submit\")}\n              </Button>\n            </Stack>\n          ) : (\n            <Stack direction=\"row\" justify=\"between\">\n              <Button\n                type=\"secondary\"\n                iconLeft={<Plus />}\n                size=\"small\"\n                onClick={() => setShowInput(true)}\n                disabled={showDelete}\n              >\n                {t(\"button.add_item\")}\n              </Button>\n              {showDelete && (\n                <Button type=\"critical\" size=\"small\" onClick={() => setShowDelete(false)}>\n                  {t(\"button.save\")}\n                </Button>\n              )}\n            </Stack>\n          )}\n        </Stack>\n      </CardSection>\n    </Card>\n  )\n}\n\nexport default TravelCard\n","// @flow\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { useTranslation } from \"react-i18next\"\nimport { defaultTokens } from \"@kiwicom/orbit-design-tokens\"\nimport Grid from \"@kiwicom/orbit-components/lib/utils/Grid\"\n\nimport TravelCard from \"./TravelCard\"\nimport data from \"../services/data.json\"\n\nconst { borderColorCard, widthBreakpointLargeDesktop, spaceLarge, spaceXLarge } = defaultTokens\n\nconst MainWrapper = styled.div`\n  background-color: ${borderColorCard};\n  padding: ${spaceLarge};\n\n  @media screen and (min-width: ${widthBreakpointLargeDesktop}px) {\n    padding: ${spaceXLarge};\n  }\n`\n\nfunction Main() {\n  const { t } = useTranslation()\n  return (\n    <MainWrapper>\n      <Grid\n        columnGap={spaceLarge}\n        rowGap={spaceLarge}\n        largeMobile={{ columns: \"1fr 1fr\", rowGap: spaceLarge }}\n        desktop={{ columns: \"1fr 1fr 1fr 1fr\" }}\n        largeDesktop={{ columnGap: spaceXLarge }}\n      >\n        {data.map(list => (\n          <TravelCard\n            key={list.category}\n            category={list.category}\n            heading={t(list.title)}\n            cardData={list.items}\n          />\n        ))}\n      </Grid>\n    </MainWrapper>\n  )\n}\n\nexport default Main\n","// @flow\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { Trans, useTranslation } from \"react-i18next\"\nimport { defaultTokens } from \"@kiwicom/orbit-design-tokens\"\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\"\nimport Text from \"@kiwicom/orbit-components/lib/Text\"\nimport TextLink from \"@kiwicom/orbit-components/lib/TextLink\"\n\nconst {\n  borderColorCard,\n  widthBreakpointLargeMobile,\n  spaceSmall,\n  spaceMedium,\n  spaceXXLarge,\n} = defaultTokens\n\nconst FooterWrapper = styled.div`\n  background-color: ${borderColorCard};\n  padding: 0 ${spaceXXLarge} ${spaceSmall};\n\n  @media screen and (min-width: ${widthBreakpointLargeMobile}px) {\n    padding: 0 ${spaceMedium} ${spaceMedium};\n  }\n`\n\nfunction Footer() {\n  const { t } = useTranslation(\"translations\")\n  return (\n    <FooterWrapper>\n      <Stack direction=\"column\" align=\"center\" justify=\"center\" dataTest=\"Footer\">\n        <Text size=\"small\" align=\"center\">\n          <Trans t={t} i18nKey=\"footer.text\">\n            © 2019-2020\n            <TextLink href=\"https://flanzana.github.io/\" external>\n              Žana Flander\n            </TextLink>\n            and\n            <TextLink href=\"https://orbit.kiwi\" external>\n              Orbit\n            </TextLink>\n          </Trans>\n        </Text>\n      </Stack>\n    </FooterWrapper>\n  )\n}\n\nexport default Footer\n","// @flow\nimport React from \"react\"\n\nimport Header from \"./components/Header\"\nimport Main from \"./components/Main\"\nimport Footer from \"./components/Footer\"\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","// @flow\nimport i18n from \"i18next\"\nimport { initReactI18next } from \"react-i18next\"\n\nimport enTranslations from \"./services/translations/en.json\"\nimport siTranslations from \"./services/translations/si.json\"\nimport esTranslations from \"./services/translations/es.json\"\nimport { LANGUAGES } from \"./services/consts\"\n\n// the translations\n// (tip move them in a JSON file and import them)\nconst resources = {\n  [LANGUAGES.ENGLISH]: {\n    translations: enTranslations,\n  },\n  [LANGUAGES.SPANISH]: {\n    translations: esTranslations,\n  },\n  [LANGUAGES.SLOVENIAN]: {\n    translations: siTranslations,\n  },\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: window.localStorage.getItem(\"language\") || LANGUAGES.ENGLISH,\n    fallbackLng: LANGUAGES.ENGLISH,\n\n    // have a common namespace used around the full app\n    ns: [\"translations\"],\n    defaultNS: \"translations\",\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  })\n\nexport default i18n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n// eslint-disable-next-line flowtype/require-valid-file-annotation\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\")\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","// @flow\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport \"./i18n\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
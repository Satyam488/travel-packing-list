{"version":3,"sources":["components/Header.js","services/consts.js","components/TravelItem.js","components/TravelCard.js","components/Main.js","components/Footer.js","services/data.js","App.js","serviceWorker.js","index.js"],"names":["widthBreakpointLargeDesktop","defaultTokens","spaceMedium","spaceXLarge","HeaderWrapper","styled","div","_templateObject","Header","react_default","a","createElement","Stack_default","direction","align","dataTest","Illustration_default","name","size","Heading_default","type","LIST","ESSENTIALS","CLOTHES","TOILETRIES","OTHER","heightCheckbox","widthCheckbox","StyledButtonLink","ButtonLink","TravelItem_templateObject","TravelItem","_ref","item","shouldResetAll","handleUnreset","_useState","useState","JSON","parse","window","localStorage","getItem","concat","_useState2","Object","slicedToArray","checked","setChecked","_useState3","_useState4","disabled","setDisabled","useEffect","setItem","justify","spacing","Checkbox_default","label","value","onChange","iconLeft","Edit_default","color","EditOff_default","title","circled","transparent","onClick","renderCardIcon","Wallet_default","Suitcase_default","Spa_default","Map_default","TravelCard","data","resetAll","setResetAll","Card_default","Card","icon","actions","Button_default","bordered","Remove_default","map","index","components_TravelItem","key","borderColorCard","spaceLarge","MainWrapper","Main_templateObject","Main","Grid_default","columnGap","rowGap","largeMobile","columns","desktop","largeDesktop","keys","list","components_TravelCard","paletteInkLightActive","widthBreakpointLargeMobile","spaceSmall","FooterWrapper","Footer_templateObject","Footer","Text_default","TextLink_default","href","external","_data","defineProperty","App","components_Header","components_Main","components_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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AAA,EAAAtE,CAAAqE,GACd7F,EAAKC,WAAa,CACjB,WACA,OACA,cACA,wBACA,mBACA,YACA,+BACA,2BATauB,OAAAsE,GAAA,EAAAtE,CAAAqE,GAWd7F,EAAKE,QAAU,CACd,YACA,QACA,OACA,UACA,WACA,SACA,QACA,SACA,UACA,SACA,iBACA,wBACA,YACA,gBACA,gBACA,sBACA,qBACA,OACA,SACA,UACA,QACA,YACA,UACA,SACA,QACA,gBArCasB,OAAAsE,GAAA,EAAAtE,CAAAqE,GAuCd7F,EAAKG,WAAa,CACjB,aACA,aACA,eACA,YACA,OACA,wBACA,aACA,aACA,aACA,oBACA,YACA,4BACA,mBACA,SACA,aACA,WACA,4BACA,gBACA,YACA,iBACA,gBACA,mBACA,eACA,cACA,qCAhEaqB,OAAAsE,GAAA,EAAAtE,CAAAqE,GAkEd7F,EAAKI,MAAQ,CACZ,aACA,aACA,0BACA,YACA,eACA,QACA,cACA,gBACA,eACA,gBACA,iBACA,uBACA,UACA,oBACA,cACA,WACA,sBACA,oCACA,cArFayF,ICeFE,OAVf,WACE,OACE3G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0G,EAAD,MACA5G,EAAAC,EAAAC,cAAC2G,GAAD,CAAM3C,KAAMA,KACZlE,EAAAC,EAAAC,cAAC4G,GAAD,QCAcC,QACW,cAA7BhF,OAAOiF,SAASC,UAEe,UAA7BlF,OAAOiF,SAASC,UAEhBlF,OAAOiF,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpH,EAAAC,EAAAC,cAACmH,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7b966b73.chunk.js","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\nimport { defaultTokens } from \"@kiwicom/orbit-design-tokens\";\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\";\nimport Heading from \"@kiwicom/orbit-components/lib/Heading\";\nimport Illustration from \"@kiwicom/orbit-components/lib/Illustration\";\n\nconst {\n  widthBreakpointLargeDesktop,\n  spaceMedium,\n  spaceXLarge,\n} = defaultTokens;\n\nconst HeaderWrapper = styled.div`\n  padding: ${spaceMedium};\n  \n  @media screen and (min-width: ${widthBreakpointLargeDesktop}px) {\n    padding: ${spaceXLarge};\n  };\n`;\n\nfunction Header() {\n  return (\n    <HeaderWrapper>\n      <Stack direction=\"column\" align=\"center\" dataTest=\"Header\">\n        <Illustration name=\"TimelinePick\" size=\"small\" />\n        <Heading type=\"title2\">TRAVEL PACKING LIST</Heading>\n      </Stack>\n    </HeaderWrapper>\n  );\n}\n\nexport default Header;\n","export const LIST = {\n  ESSENTIALS: \"Essentials\",\n  CLOTHES: \"Clothes\",\n  TOILETRIES: \"Toiletries\",\n  OTHER: \"Other\",\n};","import React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport { defaultTokens } from \"@kiwicom/orbit-design-tokens\";\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\";\nimport Checkbox from \"@kiwicom/orbit-components/lib/Checkbox\";\nimport ButtonLink from \"@kiwicom/orbit-components/lib/ButtonLink\";\nimport Edit from \"@kiwicom/orbit-components/lib/icons/Edit\";\nimport EditOff from \"@kiwicom/orbit-components/lib/icons/EditOff\";\n\nconst { heightCheckbox, widthCheckbox } = defaultTokens;\n\nconst StyledButtonLink = styled(ButtonLink)`\n  height: ${heightCheckbox};\n  width: ${widthCheckbox};\n`;\n\nfunction TravelItem({ item, shouldResetAll, handleUnreset }) {\n  const initialChecked = () => (JSON.parse(window.localStorage.getItem(`${item}-checked`)) || false);\n  const initialDisabled = () => (JSON.parse(window.localStorage.getItem(`${item}-disabled`)) || false);\n\n  const [ checked, setChecked ] = useState(initialChecked);\n  const [ disabled, setDisabled ] = useState(initialDisabled);\n\n  useEffect(() => {\n    // reset whole card after pressing button reset\n    if (shouldResetAll) {\n      setChecked(false);\n      setDisabled(false);\n      handleUnreset();\n    }\n\n    // store in local storage\n    window.localStorage.setItem(`${item}-checked`, checked);\n    window.localStorage.setItem(`${item}-disabled`, disabled);\n  }, [shouldResetAll, handleUnreset, checked, disabled, item]);\n\n  const handleCheckbox = () => {\n    setChecked(!checked);\n  };\n\n  const handleDisable = () => {\n    setDisabled(!disabled);\n    setChecked(false);\n  };\n\n  return (\n    <Stack direction=\"row\" align=\"start\" justify=\"between\" spacing=\"natural\">\n      <Checkbox\n        label={item}\n        name={item}\n        value={item}\n        checked={!disabled && checked}\n        onChange={handleCheckbox}\n        disabled={disabled}\n      />\n      <StyledButtonLink\n        type=\"secondary\"\n        size=\"small\"\n        iconLeft={disabled ? <Edit color=\"tertiary\" /> : <EditOff color=\"tertiary\" />}\n        title={disabled ? `Enable item ${item}` : `Disable item ${item}`}\n        circled\n        transparent\n        onClick={handleDisable}\n      />\n    </Stack>\n  );\n}\n\nexport default TravelItem;\n","import React, { useState } from 'react';\nimport Card, { CardHeader, CardSection } from \"@kiwicom/orbit-components/lib/Card\";\nimport Button from \"@kiwicom/orbit-components/lib/Button\";\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\";\nimport Wallet from \"@kiwicom/orbit-components/lib/icons/Wallet\";\nimport Suitcase from \"@kiwicom/orbit-components/lib/icons/Suitcase\";\nimport Spa from \"@kiwicom/orbit-components/lib/icons/Spa\";\nimport Map from \"@kiwicom/orbit-components/lib/icons/Map\";\nimport Remove from \"@kiwicom/orbit-components/lib/icons/Remove\";\n\nimport { LIST } from \"../services/consts\";\nimport TravelItem from \"./TravelItem\";\n\nfunction renderCardIcon(title) {\n  switch (title) {\n    case LIST.ESSENTIALS:\n      return <Wallet />;\n    case LIST.CLOTHES:\n      return <Suitcase />;\n    case LIST.TOILETRIES:\n      return <Spa />;\n    case LIST.OTHER:\n      return <Map />;\n    default:\n      return null\n  }\n}\n\nfunction TravelCard({ title, data }) {\n  const [ resetAll, setResetAll ] = useState(false);\n\n  return (\n    <Card dataTest={`TravelCard-${title}`}>\n      <CardHeader\n        title={title}\n        icon={renderCardIcon(title)}\n        actions={\n          <Button\n            type=\"critical\"\n            bordered\n            size=\"small\"\n            onClick={() => setResetAll(true)}\n            iconLeft={<Remove />}\n            title={`Reset the list ${title}`}\n          />\n        }\n      />\n      <CardSection>\n        <Stack direction=\"column\" spacing=\"condensed\">\n          {data.map((item, index) => (\n            <TravelItem\n              key={index}\n              item={item}\n              shouldResetAll={resetAll}\n              handleUnreset={() => setResetAll(false)}\n            />\n          ))}\n        </Stack>\n      </CardSection>\n    </Card>\n  );\n}\n\nexport default TravelCard;\n","import React from 'react';\nimport styled from \"styled-components\";\nimport { defaultTokens } from \"@kiwicom/orbit-design-tokens\";\nimport Grid from \"@kiwicom/orbit-components/lib/utils/Grid\";\n\nimport TravelCard from \"./TravelCard\";\n\nconst {\n  borderColorCard,\n  widthBreakpointLargeDesktop,\n  spaceLarge,\n  spaceXLarge,\n} = defaultTokens;\n\nconst MainWrapper = styled.div`\n  background-color: ${borderColorCard};\n  padding: ${spaceLarge};\n  \n  @media screen and (min-width: ${widthBreakpointLargeDesktop}px) {\n    padding: ${spaceXLarge};\n  };\n`;\n\nfunction Main({ data }) {\n  return (\n    <MainWrapper>\n      <Grid\n        columnGap={spaceLarge}\n        rowGap={spaceLarge}\n        largeMobile={{ columns: \"1fr 1fr\", rowGap: spaceLarge }}\n        desktop={{ columns: \"1fr 1fr 1fr 1fr\" }}\n        largeDesktop={{ columnGap: spaceXLarge }}\n      >\n        {Object.keys(data).map((list, index) => (\n          <TravelCard\n            key={index}\n            title={list}\n            data={data[list]}\n          />\n        ))}\n      </Grid>\n    </MainWrapper>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport styled from \"styled-components\";\nimport { defaultTokens } from \"@kiwicom/orbit-design-tokens\";\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\";\nimport Text from \"@kiwicom/orbit-components/lib/Text\";\nimport TextLink from \"@kiwicom/orbit-components/lib/TextLink\";\n\nconst {\n  paletteInkLightActive,\n  widthBreakpointLargeMobile,\n  spaceSmall,\n  spaceMedium,\n} = defaultTokens;\n\nconst FooterWrapper = styled.div`\n  background-color: ${paletteInkLightActive};\n  padding: ${spaceSmall};\n  \n  a {\n    color: white !important;\n  };\n  \n  @media screen and (min-width: ${widthBreakpointLargeMobile}px) {\n    padding: ${spaceMedium};\n  };\n`;\n\nfunction Footer() {\n  return (\n    <FooterWrapper>\n      <Stack direction=\"column\" align=\"center\" dataTest=\"Footer\">\n        <Text size=\"small\" type=\"white\">\n          <TextLink href=\"https://flanzana.github.io/\" external>Žana Flander</TextLink> & <TextLink href=\"https://orbit.kiwi\" external>Orbit</TextLink> © 2019\n        </Text>\n      </Stack>\n    </FooterWrapper>\n  );\n}\n\nexport default Footer;\n","import {LIST} from \"./consts\";\n\nexport const data = {\n  [LIST.ESSENTIALS]: [\n    \"Passport\",\n    \"Cash\",\n    \"Credit card\",\n    \"Smart phone & charger\",\n    \"Camera & charger\",\n    \"Powerbank\",\n    \"Health/travel insurance card\",\n    \"Tickets & reservations\",\n  ],\n  [LIST.CLOTHES]: [\n    \"Underwear\",\n    \"Socks\",\n    \"Bras\",\n    \"Pyjamas\",\n    \"T-shirts\",\n    \"Shirts\",\n    \"Pants\",\n    \"Shorts\",\n    \"Dresses\",\n    \"Skirts\",\n    \"Sports clothes\",\n    \"Sweaters, sweatshirts\",\n    \"Swimsuits\",\n    \"Coats/jackets\",\n    \"Leisure shoes\",\n    \"Walking/sport shoes\",\n    \"Sandals/flip-flops\",\n    \"Hats\",\n    \"Gloves\",\n    \"Scarves\",\n    \"Belts\",\n    \"Ties/bows\",\n    \"Jewelry\",\n    \"Purses\",\n    \"Towel\",\n    \"Laundry bag\",\n  ],\n  [LIST.TOILETRIES]: [\n    \"Toothbrush\",\n    \"Toothpaste\",\n    \"Dental floss\",\n    \"Deodorant\",\n    \"Soap\",\n    \"Shampoo & conditioner\",\n    \"Hair brush\",\n    \"Hair bands\",\n    \"Hair dryer\",\n    \"Skin lotion/cream\",\n    \"Sunscreen\",\n    \"Contact lenses & solution\",\n    \"Shaving supplies\",\n    \"Makeup\",\n    \"Lip balsam\",\n    \"Earpicks\",\n    \"Feminine-hygiene products\",\n    \"Birth control\",\n    \"Wet wipes\",\n    \"Hand sanitizer\",\n    \"First-aid kit\",\n    \"Insect repellent\",\n    \"Pain killers\",\n    \"Medications\",\n    \"Laundry kit (soap/stain remover)\",\n  ],\n  [LIST.OTHER]: [\n    \"Binoculars\",\n    \"Sunglasses\",\n    \"Laptop/tablet & charger\",\n    \"Earphones\",\n    \"Music player\",\n    \"Books\",\n    \"Board games\",\n    \"Watter bottle\",\n    \"Snacks & gum\",\n    \"Travel pillow\",\n    \"Travel blanket\",\n    \"Eye mask & ear plugs\",\n    \"Tissues\",\n    \"Guidebooks & maps\",\n    \"Paper & pen\",\n    \"Umbrella\",\n    \"Cotton shopping bag\",\n    \"Copies of passport, tickets, etc.\",\n    \"Souvenirs\",\n  ]\n};","import React from 'react';\n\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\nimport { data } from \"./services/data\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Main data={data} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
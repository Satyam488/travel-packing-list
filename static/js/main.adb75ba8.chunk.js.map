{"version":3,"sources":["components/Header.js","services/consts.js","components/TravelItem.js","components/TravelCard.js","services/data.js","components/Main.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["widthBreakpointLargeDesktop","defaultTokens","spaceMedium","spaceXLarge","HeaderWrapper","styled","div","_templateObject","Header","react_default","a","createElement","Stack_default","direction","align","dataTest","Illustration_default","name","size","Heading_default","type","LIST","ESSENTIALS","CLOTHES","TOILETRIES","OTHER","heightCheckbox","widthCheckbox","StyledButtonLink","ButtonLink","TravelItem_templateObject","TravelItem","_ref","item","shouldResetAll","handleUnreset","handleDeleteItem","_useState","useState","JSON","parse","window","localStorage","getItem","concat","_useState2","Object","slicedToArray","checked","setChecked","useEffect","setItem","justify","spacing","Checkbox_default","label","value","onChange","iconLeft","Remove_default","color","title","transparent","onClick","renderCardIcon","Wallet_default","Suitcase_default","Spa_default","Map_default","TravelCard","cardData","data","setData","_useState3","_useState4","resetAll","setResetAll","_useState5","_useState6","showInput","setShowInput","_useState7","_useState8","newItem","setNewItem","_useState9","_useState10","error","setError","stringify","Card_default","Card","icon","actions","Button_default","bordered","tablet","map","components_TravelItem","key","filter","i","removeItem","InputField_default","placeholder","e","text","newValue","target","charAt","toUpperCase","slice","toLowerCase","find","ref","input","focus","preventDefault","prevData","toConsumableArray","disabled","_data","defineProperty","borderColorCard","spaceLarge","MainWrapper","Main_templateObject","Main","Grid_default","columnGap","rowGap","largeMobile","columns","desktop","largeDesktop","keys","list","index","components_TravelCard","paletteInkLightActive","widthBreakpointLargeMobile","spaceSmall","spaceXXLarge","FooterWrapper","Footer_templateObject","Footer","Text_default","TextLink_default","href","external","App","components_Header","components_Main","components_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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F,EAAApF,EAAD,CACEQ,KAAK,QACL6C,QAAS,kBAAMiB,GAAa,IAC5BnB,MAAM,gBAHR,yBClIDU,IAAIkD,EAAA,GAAA3E,OAAA4E,GAAA,EAAA5E,CAAA2E,EACdpG,EAAKC,WAAa,CACjB,WACA,OACA,cACA,wBACA,mBACA,YACA,+BACA,2BATawB,OAAA4E,GAAA,EAAA5E,CAAA2E,EAWdpG,EAAKE,QAAU,CACd,YACA,QACA,OACA,UACA,WACA,SACA,QACA,SACA,UACA,SACA,iBACA,wBACA,YACA,gBACA,gBACA,sBACA,UACA,aACA,OACA,SACA,UACA,QACA,YACA,UACA,SACA,QACA,gBAtCauB,OAAA4E,GAAA,EAAA5E,CAAA2E,EAwCdpG,EAAKG,WAAa,CACjB,aACA,aACA,eACA,YACA,YACA,OACA,wBACA,aACA,mBACA,aACA,oBACA,oBACA,YACA,4BACA,mBACA,SACA,iBACA,UACA,aACA,WACA,4BACA,gBACA,YACA,iBACA,gBACA,mBACA,eACA,cACA,qCArEasB,OAAA4E,GAAA,EAAA5E,CAAA2E,EAuEdpG,EAAKI,MAAQ,CACZ,aACA,aACA,0BACA,YACA,uBACA,QACA,cACA,gBACA,eACA,gBACA,iBACA,uBACA,UACA,oBACA,cACA,WACA,eACA,aACA,sBACA,oCACA,cA5FagG,kMCOfE,GAIE1H,gBAJF0H,gBACA3H,GAGEC,gBAHFD,4BACA4H,GAEE3H,gBAFF2H,WACAzH,GACEF,gBADFE,YAGI0H,GAAcxH,UAAOC,IAAVwH,KACKH,GACTC,GAEqB5H,GACnBG,IA0BA4H,OAtBf,WACE,OACEtH,EAAAC,EAAAC,cAACkH,GAAD,KACEpH,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CACEuH,UAAWL,GACXM,OAAQN,GACRO,YAAa,CAAEC,QAAS,UAAWF,OAAQN,IAC3CS,QAAS,CAAED,QAAS,mBACpBE,aAAc,CAAEL,UAAW9H,KAE1B2C,OAAOyF,KAAKhE,IAAM0B,IAAI,SAACuC,EAAMC,GAAP,OACrBhI,EAAAC,EAAAC,cAAC+H,GAAD,CACEvC,IAAKsC,EACL5E,MAAO2E,EACPlE,SAAUC,GAAKiE,oSC9BzBG,GAKE1I,gBALF0I,sBACAC,GAIE3I,gBAJF2I,2BACAC,GAGE5I,gBAHF4I,WACA3I,GAEED,gBAFFC,YACA4I,GACE7I,gBADF6I,aAGIC,GAAgB1I,UAAOC,IAAV0I,KACGL,GACTE,GAAcC,GAMOF,GACnB1I,IAgBA+I,OAZf,WACE,OACExI,EAAAC,EAAAC,cAACoI,GAAD,KACEtI,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAOG,UAAU,SAASC,MAAM,SAASsC,QAAQ,SAASrC,SAAS,UACjEN,EAAAC,EAAAC,cAACuI,GAAAxI,EAAD,CAAMQ,KAAK,QAAQE,KAAK,QAAQN,MAAM,UAAtC,2BAC0BL,EAAAC,EAAAC,cAACwI,GAAAzI,EAAD,CAAU0I,KAAK,qBAAqBC,UAAQ,GAA5C,SAD1B,OAC2F5I,EAAAC,EAAAC,cAACwI,GAAAzI,EAAD,CAAU0I,KAAK,8BAA8BC,UAAQ,GAArD,qBAD3F,iBChBOC,OAVf,WACE,OACE7I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4I,EAAD,MACA9I,EAAAC,EAAAC,cAAC6I,GAAD,MACA/I,EAAAC,EAAAC,cAAC8I,GAAD,QCCcC,QACW,cAA7BjH,OAAOkH,SAASC,UAEe,UAA7BnH,OAAOkH,SAASC,UAEhBnH,OAAOkH,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtJ,EAAAC,EAAAC,cAACqJ,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.adb75ba8.chunk.js","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\nimport { defaultTokens } from \"@kiwicom/orbit-design-tokens\";\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\";\nimport Heading from \"@kiwicom/orbit-components/lib/Heading\";\nimport Illustration from \"@kiwicom/orbit-components/lib/Illustration\";\n\nconst {\n  widthBreakpointLargeDesktop,\n  spaceMedium,\n  spaceXLarge,\n} = defaultTokens;\n\nconst HeaderWrapper = styled.div`\n  padding: ${spaceMedium};\n  \n  @media screen and (min-width: ${widthBreakpointLargeDesktop}px) {\n    padding: ${spaceXLarge};\n  };\n`;\n\nfunction Header() {\n  return (\n    <HeaderWrapper>\n      <Stack direction=\"column\" align=\"center\" dataTest=\"Header\">\n        <Illustration name=\"TimelinePick\" size=\"small\" />\n        <Heading type=\"title2\">TRAVEL PACKING LIST</Heading>\n      </Stack>\n    </HeaderWrapper>\n  );\n}\n\nexport default Header;\n","export const LIST = {\n  ESSENTIALS: \"Essentials\",\n  CLOTHES: \"Clothes\",\n  TOILETRIES: \"Toiletries\",\n  OTHER: \"Other\",\n};","import React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport { defaultTokens } from \"@kiwicom/orbit-design-tokens\";\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\";\nimport Checkbox from \"@kiwicom/orbit-components/lib/Checkbox\";\nimport ButtonLink from \"@kiwicom/orbit-components/lib/ButtonLink\";\nimport Remove from \"@kiwicom/orbit-components/lib/icons/Remove\";\n\nconst { heightCheckbox, widthCheckbox } = defaultTokens;\n\nconst StyledButtonLink = styled(ButtonLink)`\n  height: ${heightCheckbox};\n  width: ${widthCheckbox};\n`;\n\nfunction TravelItem({ item, shouldResetAll, handleUnreset, handleDeleteItem }) {\n  const initialChecked = () => (JSON.parse(window.localStorage.getItem(`${item}-checked`)) || false);\n  const [ checked, setChecked ] = useState(initialChecked);\n\n  useEffect(() => {\n    // store in local storage\n    window.localStorage.setItem(`${item}-checked`, checked);\n\n    // reset whole card after pressing button reset\n    if (shouldResetAll) {\n      setChecked(false);\n      handleUnreset();\n    }\n  }, [shouldResetAll, handleUnreset, checked, item]);\n\n  return (\n    <Stack direction=\"row\" align=\"start\" justify=\"between\" spacing=\"natural\">\n      <Checkbox\n        label={item}\n        name={item}\n        value={item}\n        checked={checked}\n        onChange={() => setChecked(!checked)}\n      />\n      <StyledButtonLink\n        type=\"secondary\"\n        size=\"small\"\n        iconLeft={<Remove color=\"critical\" />}\n        title={`Delete item ${item}`}\n        transparent\n        onClick={handleDeleteItem}\n      />\n    </Stack>\n  );\n}\n\nexport default TravelItem;\n","import React, { useState, useEffect } from 'react';\nimport Card, { CardHeader, CardSection } from \"@kiwicom/orbit-components/lib/Card\";\nimport Button from \"@kiwicom/orbit-components/lib/Button\";\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\";\nimport InputField from \"@kiwicom/orbit-components/lib/InputField\";\nimport Wallet from \"@kiwicom/orbit-components/lib/icons/Wallet\";\nimport Suitcase from \"@kiwicom/orbit-components/lib/icons/Suitcase\";\nimport Spa from \"@kiwicom/orbit-components/lib/icons/Spa\";\nimport Map from \"@kiwicom/orbit-components/lib/icons/Map\";\n\nimport { LIST } from \"../services/consts\";\nimport TravelItem from \"./TravelItem\";\n\nfunction renderCardIcon(title) {\n  switch (title) {\n    case LIST.ESSENTIALS:\n      return <Wallet />;\n    case LIST.CLOTHES:\n      return <Suitcase />;\n    case LIST.TOILETRIES:\n      return <Spa />;\n    case LIST.OTHER:\n      return <Map />;\n    default:\n      return null\n  }\n}\n\nfunction capitalize(text) {\n  return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase()\n}\n\nfunction TravelCard({ title, cardData }) {\n  const initialData = () => (JSON.parse(window.localStorage.getItem(`data-${title}`)) || cardData);\n\n  const [ data, setData ] = useState(initialData);\n  const [ resetAll, setResetAll ] = useState(false);\n  const [ showInput, setShowInput ] = useState(false);\n  const [ newItem, setNewItem ] = useState(\"\");\n  const [ error, setError ] = useState(false);\n\n  useEffect(() => {\n    // store data in local storage\n    window.localStorage.setItem(`data-${title}`, JSON.stringify(data));\n  }, [data, title]);\n\n  const handleDeleteItem = (item) => {\n    // update data\n    setData(data.filter(i => i !== item));\n    // remove item from local storage\n    window.localStorage.removeItem(`${item}-checked`);\n  };\n\n  const handleReset = () => {\n    setResetAll(true);\n    // set data to default\n    setData(cardData);\n  };\n\n  const handleSubmitNewItem = e => {\n    if (newItem !== \"\") {\n      e.preventDefault();\n      // update data\n      setData(prevData => [...prevData, newItem]);\n\n      // clear states\n      setShowInput(false);\n      setNewItem(\"\");\n    }\n  };\n\n  const handleInputChange = e => {\n    const newValue = e.target.value;\n    setError(false);\n    setNewItem(capitalize(newValue));\n\n    // show error if the new value already exists on the list\n    if (data.find(item => item === newValue)) {\n        setError(true)\n    }\n  };\n\n  return (\n    <Card dataTest={`TravelCard-${title}`}>\n      <CardHeader\n        title={title}\n        icon={renderCardIcon(title)}\n        actions={\n          <Button\n            type=\"critical\"\n            bordered\n            size=\"small\"\n            onClick={handleReset}\n            title={`Reset the list ${title}`}\n          >\n            Reset\n          </Button>\n        }\n      />\n      <CardSection>\n        <Stack direction=\"column\" spacing=\"natural\" tablet={{ spacing: \"condensed\" }}>\n          {data.map(item => (\n            <TravelItem\n              key={item}\n              item={item}\n              shouldResetAll={resetAll}\n              handleUnreset={() => setResetAll(false)}\n              handleDeleteItem={() => handleDeleteItem(item)}\n            />\n          ))}\n          {showInput ?\n            (\n              <Stack direction=\"row\" spacing=\"condensed\">\n                <InputField\n                  name=\"New item\"\n                  size=\"small\"\n                  placeholder=\"Type item...\"\n                  value={newItem}\n                  onChange={handleInputChange}\n                  error={error && \"Item already exists.\"}\n                  ref={input => input && input.focus()}\n                />\n                <Button\n                  size=\"small\"\n                  onClick={handleSubmitNewItem}\n                  disabled={newItem === \"\" || error}\n                  title=\"Submit new item\"\n                >\n                  Submit\n                </Button>\n              </Stack>\n            ) : (\n              <Button\n                size=\"small\"\n                onClick={() => setShowInput(true)}\n                title=\"Add new item\"\n              >\n                Add item\n              </Button>\n            )\n          }\n        </Stack>\n      </CardSection>\n    </Card>\n  );\n}\n\nexport default TravelCard;\n","import {LIST} from \"./consts\";\n\nexport const data = {\n  [LIST.ESSENTIALS]: [\n    \"Passport\",\n    \"Cash\",\n    \"Credit card\",\n    \"Smart phone & charger\",\n    \"Camera & charger\",\n    \"Powerbank\",\n    \"Health/travel insurance card\",\n    \"Tickets & reservations\",\n  ],\n  [LIST.CLOTHES]: [\n    \"Underwear\",\n    \"Socks\",\n    \"Bras\",\n    \"Pyjamas\",\n    \"T-shirts\",\n    \"Shirts\",\n    \"Pants\",\n    \"Shorts\",\n    \"Dresses\",\n    \"Skirts\",\n    \"Sports clothes\",\n    \"Sweaters, sweatshirts\",\n    \"Swimsuits\",\n    \"Coats/jackets\",\n    \"Leisure shoes\",\n    \"Walking/sport shoes\",\n    \"Sandals\",\n    \"Flip-flops\",\n    \"Hats\",\n    \"Gloves\",\n    \"Scarves\",\n    \"Belts\",\n    \"Ties/bows\",\n    \"Jewelry\",\n    \"Purses\",\n    \"Towel\",\n    \"Laundry bag\",\n  ],\n  [LIST.TOILETRIES]: [\n    \"Toothbrush\",\n    \"Toothpaste\",\n    \"Dental floss\",\n    \"Mouthwash\",\n    \"Deodorant\",\n    \"Soap\",\n    \"Shampoo & conditioner\",\n    \"Hair brush\",\n    \"Hair bands/clips\",\n    \"Hair dryer\",\n    \"Hair straightener\",\n    \"Skin lotion/cream\",\n    \"Sunscreen\",\n    \"Contact lenses & solution\",\n    \"Shaving supplies\",\n    \"Makeup\",\n    \"Makeup remover\",\n    \"Perfume\",\n    \"Lip balsam\",\n    \"Earpicks\",\n    \"Feminine-hygiene products\",\n    \"Birth control\",\n    \"Wet wipes\",\n    \"Hand sanitizer\",\n    \"First-aid kit\",\n    \"Insect repellent\",\n    \"Pain killers\",\n    \"Medications\",\n    \"Laundry kit (soap/stain remover)\",\n  ],\n  [LIST.OTHER]: [\n    \"Binoculars\",\n    \"Sunglasses\",\n    \"Laptop/tablet & charger\",\n    \"Earphones\",\n    \"MP3 player & charger\",\n    \"Books\",\n    \"Board games\",\n    \"Watter bottle\",\n    \"Snacks & gum\",\n    \"Travel pillow\",\n    \"Travel blanket\",\n    \"Eye mask & ear plugs\",\n    \"Tissues\",\n    \"Guidebooks & maps\",\n    \"Paper & pen\",\n    \"Umbrella\",\n    \"Travel locks\",\n    \"Flashlight\",\n    \"Cotton shopping bag\",\n    \"Copies of passport, tickets, etc.\",\n    \"Souvenirs\",\n  ]\n};","import React from 'react';\nimport styled from \"styled-components\";\nimport { defaultTokens } from \"@kiwicom/orbit-design-tokens\";\nimport Grid from \"@kiwicom/orbit-components/lib/utils/Grid\";\n\nimport TravelCard from \"./TravelCard\";\nimport { data } from \"../services/data\";\n\nconst {\n  borderColorCard,\n  widthBreakpointLargeDesktop,\n  spaceLarge,\n  spaceXLarge,\n} = defaultTokens;\n\nconst MainWrapper = styled.div`\n  background-color: ${borderColorCard};\n  padding: ${spaceLarge};\n  \n  @media screen and (min-width: ${widthBreakpointLargeDesktop}px) {\n    padding: ${spaceXLarge};\n  };\n`;\n\nfunction Main() {\n  return (\n    <MainWrapper>\n      <Grid\n        columnGap={spaceLarge}\n        rowGap={spaceLarge}\n        largeMobile={{ columns: \"1fr 1fr\", rowGap: spaceLarge }}\n        desktop={{ columns: \"1fr 1fr 1fr 1fr\" }}\n        largeDesktop={{ columnGap: spaceXLarge }}\n      >\n        {Object.keys(data).map((list, index) => (\n          <TravelCard\n            key={index}\n            title={list}\n            cardData={data[list]}\n          />\n        ))}\n      </Grid>\n    </MainWrapper>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport styled from \"styled-components\";\nimport { defaultTokens } from \"@kiwicom/orbit-design-tokens\";\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\";\nimport Text from \"@kiwicom/orbit-components/lib/Text\";\nimport TextLink from \"@kiwicom/orbit-components/lib/TextLink\";\n\nconst {\n  paletteInkLightActive,\n  widthBreakpointLargeMobile,\n  spaceSmall,\n  spaceMedium,\n  spaceXXLarge,\n} = defaultTokens;\n\nconst FooterWrapper = styled.div`\n  background-color: ${paletteInkLightActive};\n  padding: ${spaceSmall} ${spaceXXLarge};\n  \n  a {\n    color: white !important;\n  };\n  \n  @media screen and (min-width: ${widthBreakpointLargeMobile}px) {\n    padding: ${spaceMedium};\n  };\n`;\n\nfunction Footer() {\n  return (\n    <FooterWrapper>\n      <Stack direction=\"column\" align=\"center\" justify=\"center\" dataTest=\"Footer\">\n        <Text size=\"small\" type=\"white\" align=\"center\">\n          Coded and designed with <TextLink href=\"https://orbit.kiwi\" external>Orbit</TextLink> by <TextLink href=\"https://flanzana.github.io/\" external>Žana Flander</TextLink> © 2019\n        </Text>\n      </Stack>\n    </FooterWrapper>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
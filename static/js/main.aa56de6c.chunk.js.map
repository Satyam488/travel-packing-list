{"version":3,"sources":["services/consts.js","services/hooks/useLocalStorage.js","components/LanguagePicker.js","components/Header.js","components/TravelItem.js","components/SettingsPopover.js","services/helpers.js","components/TravelCard.js","components/Main.js","components/Footer.js","App.js","i18n.js","serviceWorker.js","index.js"],"names":["LIST_CATEGORIES","LANGUAGES","LANGUAGES_DATA","value","flagCode","title","EDIT_MODE","useLocalStorage","key","initialValue","item","window","localStorage","getItem","useState","JSON","parse","storedValue","setStoredValue","setItem","stringify","removeItem","LanguagePicker","selectedLanguage","setSelectedLanguage","isPopoverOpen","setIsPopoverOpen","isLargeMobile","useMediaQuery","i18n","useTranslation","opened","onOpen","onClose","content","direction","spacing","tablet","Object","keys","map","language","iconLeft","code","name","onClick","changeLanguage","handleChangeLanguage","size","type","width","preferredAlign","iconRight","align","widthBreakpointDesktop","defaultTokens","spaceXXSmall","spaceSmall","spaceMedium","spaceLarge","HeaderWrapper","styled","div","FlagWrapper","Header","t","dataTest","as","heightCheckbox","widthCheckbox","StyledButtonLink","TravelItem","editMode","setEditMode","handleDeleteItemFromData","checked","setChecked","useEffect","justify","label","onChange","disabled","color","transparent","handleDeleteItem","SettingsPopover","translatedCategory","togglePopover","handleShowDelete","handleResetCard","category","fullWidth","renderCardIcon","TravelCard","heading","cardData","data","setData","error","newItem","setNewItem","filter","i","icon","actions","Card","placeholder","e","text","target","charAt","toUpperCase","slice","toLowerCase","ref","input","focus","find","preventDefault","borderColorCard","widthBreakpointLargeMobile","widthBreakpointLargeDesktop","MainWrapper","Main","columnGap","rowGap","largeMobile","columns","desktop","largeDesktop","list","items","spaceXXLarge","FooterWrapper","Footer","Trans","i18nKey","href","external","App","resources","translations","enTranslations","esTranslations","siTranslations","use","initReactI18next","init","lng","fallbackLng","ns","defaultNS","keySeparator","interpolation","escapeValue","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa56de6c.chunk.js","sourcesContent":["// @flow\nexport const LIST_CATEGORIES = {\n  ESSENTIALS: \"essentials\",\n  CLOTHES: \"clothes\",\n  TOILETRIES: \"toiletries\",\n  OTHER: \"other\",\n}\n\nexport const LANGUAGES = {\n  ENGLISH: \"en\",\n  SLOVENIAN: \"si\",\n  SPANISH: \"es\",\n}\n\nexport const LANGUAGES_DATA = {\n  [LANGUAGES.ENGLISH]: {\n    value: LANGUAGES.ENGLISH,\n    flagCode: \"gb\",\n    title: \"English\",\n  },\n  [LANGUAGES.SPANISH]: {\n    value: LANGUAGES.SPANISH,\n    flagCode: \"es\",\n    title: \"Español\",\n  },\n  [LANGUAGES.SLOVENIAN]: {\n    value: LANGUAGES.SLOVENIAN,\n    flagCode: \"si\",\n    title: \"Slovenščina\",\n  },\n}\n\nexport const EDIT_MODE = {\n  DEFAULT: \"default\",\n  OPEN_SETTINGS: \"openSettings\",\n  RESET_CARD: \"resetCard\",\n  REMOVE_ITEMS: \"removeItems\",\n  ADD_ITEM: \"addItem\",\n}\n","// @flow\nimport { useState } from \"react\"\n\n// eslint-disable-next-line flowtype/no-weak-types\nconst useLocalStorage = (key: string, initialValue: any) => {\n  // get value from local storage by key\n  const item = window.localStorage.getItem(key)\n\n  const [storedValue, setStoredValue] = useState(item ? JSON.parse(item) : initialValue)\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  const setValue = (value: any) => {\n    // save state\n    setStoredValue(value)\n    // save to local storage\n    window.localStorage.setItem(key, JSON.stringify(value))\n  }\n\n  const removeValue = () => {\n    window.localStorage.removeItem(key)\n  }\n\n  return [storedValue, setValue, removeValue]\n}\n\nexport default useLocalStorage\n","// @flow\nimport React, { useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\"\nimport CountryFlag from \"@kiwicom/orbit-components/lib/CountryFlag\"\nimport ButtonLink from \"@kiwicom/orbit-components/lib/ButtonLink\"\nimport Button from \"@kiwicom/orbit-components/lib/Button\"\nimport Popover from \"@kiwicom/orbit-components/lib/Popover\"\nimport { ChevronDown, ChevronUp } from \"@kiwicom/orbit-components/lib/icons\"\nimport useMediaQuery from \"@kiwicom/orbit-components/lib/hooks/useMediaQuery\"\n\nimport { LANGUAGES, LANGUAGES_DATA } from \"../services/consts\"\nimport useLocalStorage from \"../services/hooks/useLocalStorage\"\nimport type { Language } from \"../services/types\"\n\nconst LanguagePicker = () => {\n  const [selectedLanguage, setSelectedLanguage] = useLocalStorage(\n    \"selected-language\",\n    LANGUAGES.ENGLISH,\n  )\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false)\n  const { isLargeMobile } = useMediaQuery()\n  const { i18n } = useTranslation()\n\n  const handleChangeLanguage = (language: Language) => {\n    setSelectedLanguage(language)\n    i18n.changeLanguage(language)\n    setIsPopoverOpen(false)\n  }\n\n  const togglePopover = () => {\n    setIsPopoverOpen(!isPopoverOpen)\n  }\n\n  return (\n    <Popover\n      opened={isPopoverOpen}\n      onOpen={() => setIsPopoverOpen(true)}\n      onClose={() => setIsPopoverOpen(false)}\n      content={\n        <Stack direction=\"column\" spacing=\"condensed\" tablet={{ spacing: \"tight\" }}>\n          {Object.keys(LANGUAGES_DATA).map(language => (\n            <ButtonLink\n              key={language}\n              iconLeft={\n                <CountryFlag\n                  code={LANGUAGES_DATA[language].flagCode}\n                  name={LANGUAGES_DATA[language].title}\n                />\n              }\n              onClick={() => handleChangeLanguage(language)}\n              size=\"small\"\n              type=\"secondary\"\n              width=\"100%\"\n            >\n              {LANGUAGES_DATA[language].title}\n            </ButtonLink>\n          ))}\n        </Stack>\n      }\n      preferredAlign=\"end\"\n    >\n      <Button\n        onClick={togglePopover}\n        iconRight={isPopoverOpen ? <ChevronUp /> : <ChevronDown />}\n        type=\"secondary\"\n        size=\"small\"\n        title={LANGUAGES_DATA[selectedLanguage].title}\n      >\n        <Stack direction=\"row\" align=\"center\" spacing=\"condensed\">\n          <CountryFlag\n            code={LANGUAGES_DATA[selectedLanguage].flagCode}\n            name={LANGUAGES_DATA[selectedLanguage].title}\n          />\n          {isLargeMobile && <span>{LANGUAGES_DATA[selectedLanguage].title}</span>}\n        </Stack>\n      </Button>\n    </Popover>\n  )\n}\n\nexport default LanguagePicker\n","// @flow\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { useTranslation } from \"react-i18next\"\nimport { defaultTokens } from \"@kiwicom/orbit-design-tokens\"\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\"\nimport Heading from \"@kiwicom/orbit-components/lib/Heading\"\nimport Illustration from \"@kiwicom/orbit-components/lib/Illustration\"\n\nimport LanguagePicker from \"./LanguagePicker\"\n\nconst { widthBreakpointDesktop, spaceXXSmall, spaceSmall, spaceMedium, spaceLarge } = defaultTokens\n\nconst HeaderWrapper = styled.div`\n  padding: ${spaceMedium};\n\n  h1 {\n    text-align: center;\n  }\n\n  @media screen and (min-width: ${widthBreakpointDesktop}px) {\n    padding: ${spaceLarge};\n  }\n`\n\nconst FlagWrapper = styled.div`\n  position: absolute;\n  top: ${spaceXXSmall};\n  right: ${spaceXXSmall};\n\n  @media screen and (min-width: ${widthBreakpointDesktop}px) {\n    top: ${spaceSmall};\n    right: ${spaceSmall};\n  }\n`\n\nconst Header = () => {\n  const { t } = useTranslation()\n\n  return (\n    <HeaderWrapper>\n      <FlagWrapper>\n        <LanguagePicker />\n      </FlagWrapper>\n      <Stack direction=\"column\" align=\"center\" dataTest=\"Header\">\n        <Illustration name=\"TimelinePick\" size=\"extraSmall\" />\n        <Heading type=\"title2\" as=\"h1\">\n          {t(\"title\")}\n        </Heading>\n      </Stack>\n    </HeaderWrapper>\n  )\n}\n\nexport default Header\n","// @flow\nimport React, { useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { useTranslation } from \"react-i18next\"\nimport { defaultTokens } from \"@kiwicom/orbit-design-tokens\"\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\"\nimport Checkbox from \"@kiwicom/orbit-components/lib/Checkbox\"\nimport ButtonLink from \"@kiwicom/orbit-components/lib/ButtonLink\"\nimport { Close } from \"@kiwicom/orbit-components/lib/icons\"\nimport useLocalStorage from \"../services/hooks/useLocalStorage\"\nimport type { EditMode } from \"../services/types\"\nimport { EDIT_MODE } from \"../services/consts\"\n\nconst { heightCheckbox, widthCheckbox } = defaultTokens\n\nconst StyledButtonLink = styled.div`\n  button {\n    height: ${heightCheckbox};\n    width: ${widthCheckbox};\n  }\n`\n\ntype Props = {|\n  item: string,\n  editMode: EditMode,\n  setEditMode: EditMode => void,\n  handleDeleteItemFromData: string => void,\n|}\n\nconst TravelItem = ({ item, editMode, setEditMode, handleDeleteItemFromData }: Props) => {\n  const [checked, setChecked, removeItem] = useLocalStorage(`${item}-checked`, false)\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    // reset whole card after pressing button reset\n    if (editMode === EDIT_MODE.RESET_CARD) {\n      setChecked(false)\n      setEditMode(EDIT_MODE.DEFAULT)\n    }\n  }, [editMode, setEditMode, setChecked])\n\n  const handleDeleteItem = item => {\n    handleDeleteItemFromData(item)\n    removeItem()\n  }\n\n  return (\n    <Stack direction=\"row\" align=\"start\" justify=\"between\" spacing=\"natural\">\n      <Checkbox\n        label={t(item)}\n        name={item}\n        value={item}\n        checked={checked}\n        onChange={() => setChecked(!checked)}\n        disabled={editMode === EDIT_MODE.REMOVE_ITEMS}\n      />\n      {editMode === EDIT_MODE.REMOVE_ITEMS && (\n        <StyledButtonLink>\n          <ButtonLink\n            type=\"secondary\"\n            size=\"small\"\n            iconLeft={<Close color=\"critical\" />}\n            title={`Delete item ${item}`}\n            transparent\n            onClick={() => handleDeleteItem(item)}\n          />\n        </StyledButtonLink>\n      )}\n    </Stack>\n  )\n}\n\nexport default TravelItem\n","// @flow\nimport React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Button from \"@kiwicom/orbit-components/lib/Button\"\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\"\nimport Heading from \"@kiwicom/orbit-components/lib/Heading\"\nimport { Remove, Replace, Settings } from \"@kiwicom/orbit-components/lib/icons\"\nimport Popover from \"@kiwicom/orbit-components/lib/Popover\"\nimport type { EditMode } from \"../services/types\"\nimport { EDIT_MODE } from \"../services/consts\"\n\ntype Props = {|\n  translatedCategory: string,\n  togglePopover: () => void,\n  handleShowDelete: () => void,\n  handleResetCard: () => void,\n  editMode: EditMode,\n|}\n\nconst SettingsPopover = ({\n  translatedCategory,\n  togglePopover,\n  handleShowDelete,\n  handleResetCard,\n  editMode,\n}: Props) => {\n  const { t } = useTranslation()\n\n  return (\n    <Popover\n      content={\n        <Stack direction=\"column\" spacing=\"natural\" dataTest=\"SettingsPopover\">\n          <Heading type=\"title4\" as=\"h3\">\n            {t(\"title.settings_list\", { category: translatedCategory })}\n          </Heading>\n          <Button\n            type=\"secondary\"\n            iconLeft={<Remove />}\n            size=\"small\"\n            onClick={handleShowDelete}\n            fullWidth\n          >\n            {t(\"button.remove_items\")}\n          </Button>\n          <Button\n            type=\"criticalSubtle\"\n            iconLeft={<Replace />}\n            size=\"small\"\n            onClick={handleResetCard}\n            fullWidth\n          >\n            {t(\"button.reset_list\")}\n          </Button>\n        </Stack>\n      }\n      opened={editMode === EDIT_MODE.OPEN_SETTINGS}\n      onClose={togglePopover}\n      width=\"250px\"\n    >\n      <Button\n        size=\"small\"\n        type=\"secondary\"\n        iconLeft={<Settings />}\n        title={t(\"button.settings\")}\n        onClick={togglePopover}\n      />\n    </Popover>\n  )\n}\n\nexport default SettingsPopover\n","// @flow\nimport React from \"react\"\nimport { Camera, Spa, Suitcase, Wallet } from \"@kiwicom/orbit-components/lib/icons\"\n\nimport type { ListCategory } from \"./types\"\nimport { LIST_CATEGORIES } from \"./consts\"\n\nexport const renderCardIcon = (title: ListCategory): ?React$Node => {\n  switch (title) {\n    case LIST_CATEGORIES.ESSENTIALS:\n      return <Wallet />\n    case LIST_CATEGORIES.CLOTHES:\n      return <Suitcase />\n    case LIST_CATEGORIES.TOILETRIES:\n      return <Spa />\n    case LIST_CATEGORIES.OTHER:\n      return <Camera />\n    default:\n      return null\n  }\n}\n\nexport const capitalize = (text: string): string => {\n  return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase()\n}\n","// @flow\nimport React, { useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Card, { CardSection } from \"@kiwicom/orbit-components/lib/Card\"\nimport Button from \"@kiwicom/orbit-components/lib/Button\"\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\"\nimport InputField from \"@kiwicom/orbit-components/lib/InputField\"\nimport { Plus } from \"@kiwicom/orbit-components/lib/icons\"\nimport TravelItem from \"./TravelItem\"\nimport SettingsPopover from \"./SettingsPopover\"\nimport type { ListCategory } from \"../services/types\"\nimport useLocalStorage from \"../services/hooks/useLocalStorage\"\nimport { capitalize, renderCardIcon } from \"../services/helpers\"\nimport { EDIT_MODE } from \"../services/consts\"\n\ntype Props = {|\n  heading: string,\n  category: ListCategory,\n  cardData: Array<string>,\n|}\n\nconst TravelCard = ({ heading, category, cardData }: Props) => {\n  const { t } = useTranslation()\n  const [data, setData] = useLocalStorage(`data-${category}`, cardData)\n  const [editMode, setEditMode] = useState(EDIT_MODE.DEFAULT)\n  const [newItem, setNewItem] = useState({ value: \"\", error: null })\n\n  const togglePopover = () => {\n    if (editMode === EDIT_MODE.OPEN_SETTINGS) {\n      setEditMode(EDIT_MODE.DEFAULT)\n    } else {\n      setEditMode(EDIT_MODE.OPEN_SETTINGS)\n    }\n  }\n\n  const handleDeleteItemFromData = item => {\n    setData(data.filter(i => i !== item))\n  }\n\n  const handleResetCard = () => {\n    setEditMode(EDIT_MODE.RESET_CARD)\n    setData(cardData) // set data to default\n  }\n\n  const handleSubmitNewItem = e => {\n    // show error if field is empty\n    if (newItem.value === \"\") {\n      setNewItem({ ...newItem, error: t(\"input.error.enter_item\") })\n      // show error if the new value already exists on the list\n    } else if (data.find(item => t(item) === newItem.value)) {\n      setNewItem({ ...newItem, error: t(\"input.error.already_exist\") })\n    } else {\n      e.preventDefault()\n      // update data\n      setData([...data, newItem.value])\n\n      // clear states\n      setEditMode(EDIT_MODE.DEFAULT)\n      setNewItem({ value: \"\", error: null })\n    }\n  }\n\n  const handleInputChange = e => {\n    setNewItem({ ...newItem, value: capitalize(e.target.value) })\n  }\n\n  const handleShowDelete = () => {\n    setEditMode(EDIT_MODE.REMOVE_ITEMS)\n  }\n\n  return (\n    <Card\n      dataTest={`TravelCard-${category}`}\n      title={heading}\n      icon={renderCardIcon(category)}\n      actions={\n        <SettingsPopover\n          translatedCategory={heading}\n          togglePopover={togglePopover}\n          handleShowDelete={handleShowDelete}\n          handleResetCard={handleResetCard}\n          editMode={editMode}\n        />\n      }\n    >\n      <CardSection>\n        <Stack direction=\"column\" spacing=\"natural\" tablet={{ spacing: \"condensed\" }}>\n          {data.map(item => (\n            <TravelItem\n              key={item}\n              item={item}\n              editMode={editMode}\n              setEditMode={setEditMode}\n              handleDeleteItemFromData={handleDeleteItemFromData}\n            />\n          ))}\n          {editMode === EDIT_MODE.ADD_ITEM ? (\n            <Stack direction=\"row\" spacing=\"condensed\">\n              <InputField\n                name=\"New item\"\n                size=\"small\"\n                placeholder={t(\"placeholder.type_item\")}\n                value={newItem.value}\n                onChange={handleInputChange}\n                error={newItem.error}\n                ref={input => input && input.focus()}\n              />\n              <Button size=\"small\" onClick={handleSubmitNewItem}>\n                {t(\"button.save\")}\n              </Button>\n            </Stack>\n          ) : (\n            <Stack direction=\"row\" justify=\"between\">\n              <Button\n                type=\"secondary\"\n                iconLeft={<Plus />}\n                size=\"small\"\n                onClick={() => setEditMode(EDIT_MODE.ADD_ITEM)}\n                disabled={editMode === EDIT_MODE.REMOVE_ITEMS}\n              >\n                {t(\"button.add_item\")}\n              </Button>\n              {editMode === EDIT_MODE.REMOVE_ITEMS && (\n                <Button type=\"critical\" size=\"small\" onClick={() => setEditMode(EDIT_MODE.DEFAULT)}>\n                  {t(\"button.save\")}\n                </Button>\n              )}\n            </Stack>\n          )}\n        </Stack>\n      </CardSection>\n    </Card>\n  )\n}\n\nexport default TravelCard\n","// @flow\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { useTranslation } from \"react-i18next\"\nimport { defaultTokens } from \"@kiwicom/orbit-design-tokens\"\nimport Grid from \"@kiwicom/orbit-components/lib/utils/Grid\"\n\nimport TravelCard from \"./TravelCard\"\nimport data from \"../services/data.json\"\n\nconst {\n  borderColorCard,\n  widthBreakpointLargeMobile,\n  widthBreakpointLargeDesktop,\n  spaceSmall,\n  spaceMedium,\n  spaceLarge,\n} = defaultTokens\n\nconst MainWrapper = styled.div`\n  background-color: ${borderColorCard};\n  padding: ${spaceSmall};\n\n  @media screen and (min-width: ${widthBreakpointLargeMobile}px) {\n    padding: ${spaceMedium};\n  }\n\n  @media screen and (min-width: ${widthBreakpointLargeDesktop}px) {\n    padding: ${spaceLarge};\n  }\n`\n\nconst Main = () => {\n  const { t } = useTranslation()\n  return (\n    <MainWrapper>\n      <Grid\n        columnGap={spaceMedium}\n        rowGap={spaceSmall}\n        largeMobile={{ columns: \"1fr 1fr\", rowGap: spaceMedium }}\n        desktop={{ columns: \"1fr 1fr 1fr 1fr\" }}\n        largeDesktop={{ rowGap: spaceLarge, columnGap: spaceLarge }}\n      >\n        {data.map(list => (\n          <TravelCard\n            key={list.category}\n            category={list.category}\n            heading={t(list.title)}\n            cardData={list.items}\n          />\n        ))}\n      </Grid>\n    </MainWrapper>\n  )\n}\n\nexport default Main\n","// @flow\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { Trans, useTranslation } from \"react-i18next\"\nimport { defaultTokens } from \"@kiwicom/orbit-design-tokens\"\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\"\nimport Text from \"@kiwicom/orbit-components/lib/Text\"\nimport TextLink from \"@kiwicom/orbit-components/lib/TextLink\"\n\nconst {\n  borderColorCard,\n  widthBreakpointLargeMobile,\n  spaceSmall,\n  spaceMedium,\n  spaceXXLarge,\n} = defaultTokens\n\nconst FooterWrapper = styled.div`\n  background-color: ${borderColorCard};\n  padding: 0 ${spaceXXLarge} ${spaceSmall};\n\n  @media screen and (min-width: ${widthBreakpointLargeMobile}px) {\n    padding: 0 ${spaceMedium} ${spaceMedium};\n  }\n`\n\nconst Footer = () => {\n  const { t } = useTranslation(\"translations\")\n  return (\n    <FooterWrapper>\n      <Stack direction=\"column\" align=\"center\" justify=\"center\" dataTest=\"Footer\">\n        <Text size=\"small\" align=\"center\">\n          <Trans t={t} i18nKey=\"footer.text\">\n            © 2019-2020\n            <TextLink href=\"https://flanzana.github.io/\" external>\n              Žana Flander\n            </TextLink>\n            and\n            <TextLink href=\"https://orbit.kiwi\" external>\n              Orbit\n            </TextLink>\n          </Trans>\n        </Text>\n      </Stack>\n    </FooterWrapper>\n  )\n}\n\nexport default Footer\n","// @flow\nimport React from \"react\"\n\nimport Header from \"./components/Header\"\nimport Main from \"./components/Main\"\nimport Footer from \"./components/Footer\"\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","// @flow\nimport i18n from \"i18next\"\nimport { initReactI18next } from \"react-i18next\"\n\nimport enTranslations from \"./services/translations/en.json\"\nimport siTranslations from \"./services/translations/si.json\"\nimport esTranslations from \"./services/translations/es.json\"\nimport { LANGUAGES } from \"./services/consts\"\n\n// the translations\n// (tip move them in a JSON file and import them)\nconst resources = {\n  [LANGUAGES.ENGLISH]: {\n    translations: enTranslations,\n  },\n  [LANGUAGES.SPANISH]: {\n    translations: esTranslations,\n  },\n  [LANGUAGES.SLOVENIAN]: {\n    translations: siTranslations,\n  },\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: JSON.parse(window.localStorage.getItem(\"selected-language\")) || LANGUAGES.ENGLISH,\n    fallbackLng: LANGUAGES.ENGLISH,\n\n    // have a common namespace used around the full app\n    ns: [\"translations\"],\n    defaultNS: \"translations\",\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  })\n\nexport default i18n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n// eslint-disable-next-line flowtype/require-valid-file-annotation\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\")\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","// @flow\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport \"./i18n\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}